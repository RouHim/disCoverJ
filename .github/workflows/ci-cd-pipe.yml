name: CI/CD

on:
  push:
  pull_request:
  workflow_dispatch:
  
env:
  VERSION: ${{ github.run_number }}.0.0

jobs:
  analyse:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL'
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: 'trivy-results.sarif'

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: |
          mvn versions:set -DnewVersion=${{ env.VERSION }}
          mvn clean package
      - uses: actions/upload-artifact@master
        with:
          name: app-jar
          path: target/*.jar

  publish:
    runs-on: ubuntu-latest
    needs:
      - build
      - analyse
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Set up Git Config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
      - name: Download jar from builder
        uses: actions/download-artifact@master
        with:
          name: app-jar
          path: target
      - name: Publish with jDeploy
        run: |
          npm version ${{ env.VERSION }}
          npx jdeploy publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
